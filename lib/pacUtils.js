/**
 * Proxy.pac creater
 * Created by HongQing.Zhu on 2015/2/10.
 */
(function (module) {

    var config = require("../config"),
        utils = require("./utils"),
        fsUtils = require("./fsUtils"),
        strUtils = require("./strUtils"),
        juicer = require("juicer"),
        pacUtils = {},
        proxyConfig = {
            DIRECT: "DIRECT",
            PROXY: config.proxy
        };

    juicer.set("strip", false);
    module.exports = pacUtils;

    /**
     *  Root schema,allow ext
     */
    var _pacSchema = function () {
        return utils.extend({}, proxyConfig, {
            LOG: "Proxy.pac file generated by autoProxy " + new Date().toTimeString(),
            // List of domain Schema
            DOMAINS: []
        });
    };

    // Domain schema
    var _domainSchema = function (domainSchema, pacSchema) {
        var pacS = pacSchema || proxyConfig;
        return    {
            DOMAIN: domainSchema.domain,
            PROXY: (domainSchema.proxy === true) ? pacS.PROXY : pacS.DIRECT
        };
    };

    utils.extend(pacUtils, {
        /**
         * Create proxy.pac by domains :)
         *
         * @param {Array} domains
         * example:
         * [{
         *      DOMAIN:'bing.com',
         *      PROXY:false
         * },{
         *      DOMAIN:'google.com',
         *      PROXY:true
         * }]
         *
         * @param {Function||Object} callback  foreach domains with callback like function(@see _domainSchema,@see _pacSchema){}
         * @param {Object} pacSchema  Ext @see  _pacSchema
         * @param {String} tarPath
         * @param {String} pacTemp
         */
        create: function (domains, callback, pacSchema, tarPath, pacTemp) {
            var ds = domains || [],
                dsLen = ds.length,
                defPacSchema = _pacSchema(),
                isCallBack = utils.isFunction(callback),
                cb = isCallBack ? callback : utils.noop,
                pacS = utils.extend(defPacSchema, isCallBack ? (pacSchema || {}) : (callback || {}));

            for (var i = 0; i < dsLen; i++) {
                // If result,use result replace foreach one
                var domainSchema = _domainSchema(ds[i], pacS);
                var result = cb(domainSchema, pacS);
                if (!result)
                    result = domainSchema;
                pacS.DOMAINS.push(result);
            }
            fsUtils.writeAndBackupOldSync(tarPath || config.pacPath, juicer(fsUtils.readTextSync((pacTemp || config.pacTemp)), pacS));
        },
        /**
         * Create hashPac :)
         *
         * Add pacSchema : {
         *    DOMAIN_HASH_TABLE: [[_domainSchema,_domainSchema],[_domainSchema,_domainSchema]],
              HASH_TOTAL: domains.length - 1
         * }
         *
         * @param {Array} domains
         * @param {String} tarPath
         * @param {String} pacTemp
         */
        createHashSwitch: function (domains, tarPath, pacTemp) {
            var ds = domains || [],
                pacSchema = {
                    DOMAIN_HASH_TABLE: [],
                    HASH_TOTAL: ds.length - 1
                };

            var domainCallback = function (domain, pac) {
                var hash = utils.hashCode(domain.DOMAIN);
                var index = hash & pac.HASH_TOTAL;
                var e = pac.DOMAIN_HASH_TABLE[index];
                if (!e) {
                    pac.DOMAIN_HASH_TABLE[index] = e = [];
                }
                var flag = true;
                for (var k = 0; k < e.length; k++) {
                    if (e[k].DOMAIN === domain.DOMAIN)
                        flag = false;
                }
                if (flag)
                    e.push(domain);
            };

            pacUtils.create(ds, domainCallback, pacSchema, tarPath, pacTemp);
        },
        /**
         * Simple-Data to create for TOP-1W
         * Example:
         * 1,google.com
         * 2,bing.com
         * 3,youtube.com
         *
         * @param srcPath
         * @param tarPath
         * @param pacTemp
         */
        createByTOP1W: function (srcPath, tarPath, pacTemp) {
            var domains = [];
            fsUtils.readLine(srcPath, function (e, l, f) {
                if (l) {
                    //Hack :)
                    domains.push(l.split(strUtils.COMMA)[1]);
                    return;
                }
                if (f)
                    pacUtils.create(domains, tarPath, pacTemp);
                if (e)
                    throw e;
            });
        }
    });
})(module);